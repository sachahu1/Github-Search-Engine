[tool.poetry]
name = "Github-Search-Engine"
version = "0.2.0"
description = "Search through github issues and PRs like never before."
authors = ["Sacha hu <hu.sacha.ai@gmail.com>"]
packages = [
    { include = "github_search_engine" }
]
readme = "README.md"
maintainers = ["Sacha hu <hu.sacha.ai@gmail.com>"]
repository = "https://github.com/sachahu1/Github-Search-Engine"
documentation = "https://sachahu.com/docs/github-search-engine/latest/index.html"

[tool.poetry.dependencies]
python = ">=3.10,<3.14"
ollama = "^0.4.0"
githubkit = "^0.11.14"
qdrant-client = {extras = ["fastembed-gpu"], version = "^1.12.1"}
onnxruntime-gpu = {version = "^1.19.2", source = "onnx"}
chevron = "^0.14.0"
cleo = "^2.1.0"
python-dotenv = "^1.0.1"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
ruff = "^0.5.5"
pre-commit = "^3.7.1"

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
pytest = "^6.2.5"
pytest-mock = "^3.14.0"
coverage = {version = "^6.4.2", extras = ["toml"]}

[tool.poetry.group.documentation]
optional = true

[tool.poetry.group.documentation.dependencies]
Sphinx = "^7.3.7"
sphinxcontrib-napoleon = "^0.7"
sphinx-rtd-theme = "^2.0.0"
myst-parser = "^3.0.1"
sphinx-copybutton = "^0.5.2"
sphinx-autoapi = "^3.2.1"
gitpython = "^3.1.43"


[tool.poetry.group.api.dependencies]
fastapi = {extras = ["standard"], version = "^0.115.5"}

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --junit-xml=test_results/tests.xml"
testpaths = ["tests"]

[tool.coverage.run]
source = ["github_search_engine"]

[tool.poetry.scripts]
github_search_engine = "github_search_engine.cli:run"

[tool.ruff]
line-length = 79
indent-width = 2
exclude = [".venv", ".env", ".git", "tests"]


[tool.ruff.lint]
# Add the `line-too-long` rule to the enforced rule set. By default, Ruff omits rules that
# overlap with the use of a formatter, like Black, but we can override this behavior by
# explicitly adding the rule.
extend-select = [
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "ERA", # flake8-eradicate/eradicate
    "I",   # isort
    "N",   # pep8-naming
    "PIE", # flake8-pie
    "PGH", # pygrep
    "RUF", # ruff checks
    "SIM", # flake8-simplify
    "T20", # flake8-print
    "TCH", # flake8-type-checking
    "TID", # flake8-tidy-imports
    "UP",  # pyupgrade
]
fixable = ["ALL"]
ignore = ["SIM117"]

[tool.ruff.lint.isort]
force-single-line = true
lines-after-imports = 2
known-first-party = ["github_search_engine"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true

[[tool.poetry.source]]
name = "onnx"
url = "https://aiinfra.pkgs.visualstudio.com/PublicPackages/_packaging/onnxruntime-cuda-12/pypi/simple/"
priority = "supplemental"

[tool.semantic_release]
version_variables = [
    "github_search_engine/__init__.py:__version__",
    "docs/source/conf.py:release",
    "docs/source/conf.py:html_context.current_version",
]
version_toml = [
    "pyproject.toml:tool.poetry.version"
]
upload_to_pypi = false
upload_to_release = true

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease = false

[tool.semantic_release.branches.dev]
match = "dev"
prerelease = true
prerelease_token = "rc"

[tool.semantic_release.branches."feature/*"]
match = "(feature/*)"
prerelease = true
prerelease_token = "alpha"
